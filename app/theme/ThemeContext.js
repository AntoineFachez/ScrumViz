'use client';
import { createContext, useState, useMemo, useEffect } from 'react';
import { createTheme } from '@mui/material/styles';
// color design theme export
const theme = (colorMode) => ({
  mode: colorMode?.mode,
  ...(colorMode?.mode === 'dark'
    ? {
        grey: {
          100: '#e0e0e0',
          200: '#c2c2c2',
          300: '#a3a3a3',
          400: '#858585',
          500: '#666666',
          600: '#525252',
          700: '#3d3d3d',
          800: '#292929',
          900: '#141414',
        },
        primary: {
          100: '#d0d1d5',
          200: '#a1a4ab',
          300: '#727681',
          400: '#1F2A40',
          500: '#141b2d',
          600: '#101624',
          700: '#0c101b',
          800: '#080b12',
          900: '#040509',
        },
        greenAccent: {
          100: '#dbf5ee',
          200: '#b7ebde',
          300: '#94e2cd',
          400: '#70d8bd',
          500: '#4cceac',
          600: '#3da58a',
          700: '#2e7c67',
          800: '#1e5245',
          900: '#0f2922',
        },
        redAccent: {
          100: '#f8dcdb',
          200: '#f1b9b7',
          300: '#e99592',
          400: '#e2726e',
          500: '#db4f4a',
          600: '#af3f3b',
          700: '#832f2c',
          800: '#58201e',
          900: '#2c100f',
        },
        blueAccent: {
          100: '#e1e2fe',
          200: '#c3c6fd',
          300: '#a4a9fc',
          400: '#868dfb',
          500: '#6870fa',
          600: '#535ac8',
          700: '#3e4396',
          800: '#2a2d64',
          900: '#151632',
        },
        yellowAccent: {
          100: '#fff8e1', // Lightest shade (almost white)
          200: '#ffecb3', // Lighter shade
          300: '#ffe082', // Light yellow
          400: '#ffd54a', // Medium yellow with a hint of orange
          500: '#ffbf00', // Standard yellow (amber)
          600: '#ffa000', // Darker shade of yellow (orange)
          700: '#e08c00', // Rich dark yellow (dark orange)
          800: '#c07800', // Deep dark yellow (burnt orange)
          900: '#a06400', // Darkest shade (dark brown)
        },
      }
    : {
        grey: {
          100: '#141414',
          200: '#292929',
          300: '#3d3d3d',
          400: '#525252',
          500: '#666666',
          600: '#858585',
          700: '#a3a3a3',
          800: '#c2c2c2',
          900: '#e0e0e0',
        },
        primary: {
          100: '#040509',
          200: '#080b12',
          300: '#0c101b',
          400: '#f2f0f0', // manually changed
          500: '#141b2d',
          600: '#1F2A40',
          700: '#727681',
          800: '#a1a4ab',
          900: '#d0d1d5',
        },
        greenAccent: {
          100: '#0f2922',
          200: '#1e5245',
          300: '#2e7c67',
          400: '#3da58a',
          500: '#4cceac',
          600: '#70d8bd',
          700: '#94e2cd',
          800: '#b7ebde',
          900: '#dbf5ee',
        },
        redAccent: {
          100: '#2c100f',
          200: '#58201e',
          300: '#832f2c',
          400: '#af3f3b',
          500: '#db4f4a',
          600: '#e2726e',
          700: '#e99592',
          800: '#f1b9b7',
          900: '#f8dcdb',
        },
        blueAccent: {
          100: '#151632',
          200: '#2a2d64',
          300: '#3e4396',
          400: '#535ac8',
          500: '#6870fa',
          600: '#868dfb',
          700: '#a4a9fc',
          800: '#c3c6fd',
          900: '#e1e2fe',
        },
        yellowAccent: {
          100: '#ffffe0', // Lightest yellow (almost white)
          200: '#fffacd', // Lighter yellow
          300: '#fff59d', // Light yellow with a hint of gold
          400: '#ffeb6c', // More vibrant yellow
          500: '#ffea00', // Standard yellow
          600: '#ffd600', // Darker yellow
          700: '#fbc500', // Rich yellow (similar to gold)
          800: '#f69900', // Deep yellow
          900: '#e97400', // Darkest yellow (almost brown)
        },
      }),
});

// mui theme settings
export const themeSettings = (colorMode) => {
  const colors = theme(colorMode);

  const palette = {
    mode: colorMode?.mode,
    ...(colorMode?.mode === 'dark'
      ? {
          // palette values for dark mode
          primary: {
            dark: colors.primary[700],
            main: colors.primary[500],
            light: colors.primary[100],
            contrastText: colors.greenAccent[500],
          },
          secondary: {
            main: colors.greenAccent[500],
          },
          neutral: {
            dark: colors.grey[900],
            main: colors.grey[500],
            contrast: colors.grey[200],
            light: colors.grey[100],
            alpha1: '#000000e6',
            alpha2: '#050505CC',
            alpha3: '#05050580',
          },
          background: {
            paper: '#efefef',
            paperLight: '#e0e0e0',
            default: 'pink',
            white: 'white',
            transparent: 'transparent',
          },
          white: 'white',
          action: colors.greenAccent[500],
          active: colors.greenAccent[800],
          success: colors.greenAccent[500],
          inactive: colors.greenAccent[300],
          selected: 'steelblue',
          unselected: colors.grey[400],
          warning: colors.yellowAccent[500],
          alert: colors.redAccent[600],
          error: colors.redAccent[500],
          system: colors.blueAccent[500],
          dev: 'hotpink',
        }
      : {
          // palette values for light mode
          primary: {
            main: colors.primary[100],
          },
          secondary: {
            main: colors.greenAccent[500],
          },
          neutral: {
            dark: colors.grey[800],
            main: colors.grey[500],
            contrast: colors.grey[800],
            light: colors.grey[600],
            alpha1: '#000000e6',
            alpha2: '#050505CC',
          },
          background: {
            paper: '#e0e0e0',
            paperLight: '#d9d9d9',
            default: 'pink',
            white: 'white',
            transparent: 'transparent',
          },
          white: 'white',
          action: colors.greenAccent[500],
          active: colors.greenAccent[400],
          success: colors.greenAccent[500],
          inactive: colors.greenAccent[700],
          selected: 'steelblue',
          unselected: colors.grey[400],
          warning: colors.yellowAccent[500],
          alert: colors.redAccent[600],
          error: colors.redAccent[500],
          system: colors.blueAccent[500],
          dev: 'hotpink',
        }),
  };
  return palette;
};

const styled = (colorMode) => ({
  fullBody: {
    position: 'relative',
    width: '100vw',
    height: '100vh',
    maxHeight: '100vh',
    maxWidth: '100vw',
    // backgroundColor: () => themeSettings(colorMode).neutral.main,
  },
  centerFullAvailableSpace: {
    width: '100%',
    height: '100%',
    // height: mainHeight,
    position: 'relative',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'space-between',
    alignItems: 'center',
    backgroundColor: () => themeSettings(colorMode).neutral.main,
    // borderRadius: 'inherit',
    // overflow: "hidden",
    // padding: '4rem 0rem 0rem 0rem',
  },
  signUpLogInCard: {
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'space-between',
    // gap: '1rem',
    // padding: '1rem',

    header: { height: '2rem' },
    body: {
      '&:hover': { border: '1px solid #555' },
      // maxWidth: '18rem',
      // height: '100%',
      height: 'fit-content',
      // maxHeight: '18rem',
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'flex-start',
      gap: '1rem',
      padding: '1rem',
    },
    footer: {
      width: '100%',
      height: '2rem',
      display: 'flex',
      flexFlow: 'row',
      justifyContent: 'flex-end',
    },
  },
  navBar: {
    position: 'fixed',
    top: 0,
    width: '100%',
    // height: "fit-content",
    height: '3rem',
    zIndex: '100',
    display: 'flex',
    flexFlow: 'row nowrap',
    justifyContent: 'space-between',
    alignItems: 'center',
    // width: "inherit",
    // justifyContent: "center",
    // alignItems: "center",
    backgroundColor: () => themeSettings(colorMode).neutral.dark,
    padding: '0 1rem 0 0.2rem',
  },
  navBarInfoBox: {
    height: 'inherit',
    display: 'flex',
    flexFlow: 'row nowrap',
    backgroundColor: () => themeSettings(colorMode).neutral.light,
  },
  navBarButtonList: {
    // position: "absolute",
    // top: 0,
    // left: 0,
    // bottom: 0,
    // right: 0,
    display: 'flex',
    flexFlow: 'row nowrap',
    flexGrow: 3,
    flexShrink: 1,
    justifyContent: 'flex-start',
    alignItems: 'center',
    width: '100%',
    height: '100%',
    backgroundColor: () => themeSettings(colorMode).neutral.dark,
  },
  navBarButton: {
    // width: "2rem",
    // height: "2rem",
    display: 'flex',
    flexFlow: 'row nowrap',
    // size: "1rem",
    // color: () => themeSettings(colorMode).neutral.light,
    // backgroundColor: () => themeSettings(colorMode).neutral.main,
    active: {
      display: 'flex',
      flexFlow: 'row nowrap',
      color: () => themeSettings(colorMode).active,
      // color: "black",
      // backgroundColor: "white",
      backgroundColor: () => themeSettings(colorMode).neutral.main,
      '&:hover': {
        backgroundColor: () => themeSettings(colorMode).white,
      },
    },
    inactive: {
      display: 'flex',
      flexFlow: 'row nowrap',
      color: () => themeSettings(colorMode).neutral.main,
      // color: "black",
      // backgroundColor: "white",
      backgroundColor: () => themeSettings(colorMode).transparent,
      '&:hover': {
        backgroundColor: () => themeSettings(colorMode).neutral.light,
      },
    },
  },
  reactGrid: {
    zIndex: 100,
    position: 'absolute',
    '& >*': { visibility: 'hidden' },
    backgroundColor: () => themeSettings(colorMode).neutral.light,
    display: 'flex',
  },
  reactGridItem: {
    '&:active': {
      backgroundColor: () => themeSettings(colorMode).secondary.main,
    },
    // margin: 0,
    // padding: 0,
  },
  spaces: {
    position: 'relative',
    width: '100%',
    height: '100%',
    display: 'flex',
    flexFlow: 'column nowrap',
    justifyContent: 'flex-start',
    alignItems: 'center',
    overflow: 'scroll',
    backgroundColor: () => themeSettings(colorMode).transparent,
    // margin: 0,
    // padding: 0,
  },
  space: {
    height: '100%',
    position: 'relative',
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    // backgroundColor: 'red',
    // backgroundColor:() => themeSettings(colorMode).neutral.light,
    // backgroundColor: () => themeSettings(colorMode).neutral.light,
    overflow: 'scroll',
    backgroundColor: () => themeSettings(colorMode).transparent,
    // margin: 0,
  },
  spacesMenu: {
    zIndex: '50',
    position: 'absolute',
    // top: 0,
    // left: 0,
    width: 'fit-content',
    height: 'fit-content',
    minHeight: '2rem',
    display: 'flex',
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'flex-start',
    alignItems: 'center',
    backgroundColor: () => themeSettings(colorMode).transparent,
    padding: '0 1rem 0 0',
    transition: 'width 1s',
    '&:hover': {
      width: '100%',
      color: () => themeSettings(colorMode).neutral.contrast,
      backgroundColor: () => themeSettings(colorMode).neutral.dark,
      transition: 'width 1s',
    },
  },
  widgetContainer: {
    position: 'relative',
    width: '100%',
    height: '100%',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    // paddingTop: '2rem',
    borderRadius: '5px',
    backgroundColor: 'transparent',
    boxShadow:
      '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',
  },
  widgetMenu: {
    width: '100%',
    // height: '2rem',
    zIndex: 200,
    // position: 'absolute',
    top: 0,
    // right: 0,
    // bottom: 0,
    // left: 0,
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'flex-end',
    alignItems: 'center',
    borderRadius: ' 5px 5px 0rem 0rem',
    backgroundColor: () => themeSettings(colorMode).neutral.dark,
    cursor: 'grab',
  },
  menuButtonText: {
    action: {
      height: '2rem',
      color: () => themeSettings(colorMode).action,
      fontSize: '0.7rem',
      backgroundColor: () => themeSettings(colorMode).neutral.main,
      '&:hover': { color: () => themeSettings(colorMode).neutral.dark },
    },
    selected: {
      height: '2rem',
      color: 'white',
      fontSize: '0.7rem',
      backgroundColor: () => themeSettings(colorMode).selected,
      '&:hover': { color: () => themeSettings(colorMode).neutral.dark },
    },
    unselected: {
      height: '2rem',
      color: () => themeSettings(colorMode).unselected,
      fontSize: '0.7rem',
      backgroundColor: () => themeSettings(colorMode).neutral.main,
      '&:hover': { color: () => themeSettings(colorMode).neutral.dark },
    },
    active: {
      width: '3rem',
      height: '2rem',
      display: 'flex',
      // justifyContent: "center",
      // alignItems: "center",
      color: () => themeSettings(colorMode).active,
      fontSize: '0.7rem',
      backgroundColor: () => themeSettings(colorMode).neutral.main,
      // paddingBottom: "0.05em",
      '&:hover': { color: () => themeSettings(colorMode).neutral.dark },
    },
    inactive: {
      width: '100%',
      height: '2rem',
      display: 'flex',
      // justifyContent: "center",
      // alignItems: "center",
      color: () => themeSettings(colorMode).inactive,
      fontSize: '0.7rem',
      backgroundColor: () => themeSettings(colorMode).neutral.main,
      // paddingBottom: "0.05em",
    },
  },
  draggable: {
    // width: "100%",
    width: 'fit-content',
    // height: `${100}%`,
    // height: "100%",
    height: 'fit-content',
    position: 'relative',
    display: 'flex',
    flexDirection: 'column',
    backgroundColor: 'transparent',
    cursor: 'grab',
    // backgroundColor: () => themeSettings(colorMode).neutral.dark,
    // overflow: "scroll",
  },
  draggableIcon: {
    // width: "100%",
    width: 'fit-content',
    // height: `${100}%`,
    // height: "100%",
    height: 'fit-content',
    position: 'relative',
    display: 'flex',
    flexDirection: 'column',
    backgroundColor: () => themeSettings(colorMode).neutral.contrast,
    // overflow: "scroll",
  },
  dropZone: {
    width: '100%',
    border: '1px dashed #333',
    borderRadius: '5px',
    // margin: '20px',
    // textAlign: 'center',
    backgroundColor: () => themeSettings(colorMode).transparent,
    '&:hover': {
      border: `1px dashed ${themeSettings(colorMode).neutral.main}`,
    },
  },
  caroussell: {
    width: '100%',
    height: '100%',
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    // overflowY: "scroll",    //  borderRadius: '5px',
    backgroundColor: () => themeSettings(colorMode).neutral.main,
    // gap: 1,
  },
  widget: {
    position: 'relative',
    width: '100%',
    height: '100%',
    display: 'flex',
    flexFlow: 'column wrap',
    justifyContent: 'center',
    alignItems: 'center',
    // padding: '2rem',
    overflow: 'hidden',
    // paddingTop: "1rem",
    borderRadius: '0 0 5px 5px',
    backgroundColor: () => themeSettings(colorMode).neutral.alpha3,
    // backgroundColor: () => themeSettings(colorMode).neutral.light,
  },
  widgetInline: {
    width: '100%',
    height: '100%',
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    backgroundColor: () => themeSettings(colorMode).neutral.dark,
    padding: '0 0.5rem 0 0.4rem',
  },
  widgetMenuCollapse: {
    zIndex: 600,
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    // width: "fit-content",
    // width: "2rem",
    // height: "100%",
    // height: "fit-content",
    height: '2rem',
    // minHeight: "2rem",
    display: 'flex',
    // flexDirection: "column",
    // flexWrap: "wrap",
    // justifyContent: "flex-start",
    // alignItems: "center",

    backgroundColor: () => themeSettings(colorMode).transparent,
    '& >': { visibility: 'hidden' },
    // transition:
    //   "width: 100ms ease-in-out, padding: 100ms ease-in-out, background-color: 400ms ease-in-out",
  },
  widgetSettingButton: {
    active: {
      width: '2rem',
      // height: "100%",
      height: '2rem',
      color: () => themeSettings(colorMode).neutral.dark,
      backgroundColor: () => themeSettings(colorMode).neutral.light,
      transition: 'color 800ms',
      '&:hover': {
        color: () => themeSettings(colorMode).neutral.light,
        backgroundColor: () => themeSettings(colorMode).neutral.light,
      },
      // "&:active": {
      //   color: () => themeSettings(colorMode).secondary.main,
      //   backgroundColor: () => themeSettings(colorMode).neutral.light,
      //   transition: "color 800ms",
      // },
    },
    inactive: {
      width: '2rem',
      // height: "100%",
      height: '2rem',
      // fontSize: 12,
      color: () => themeSettings(colorMode).neutral.main,
      backgroundColor: () => themeSettings(colorMode).transparent,

      '&:hover': {
        color: () => themeSettings(colorMode).neutral.dark,
        backgroundColor: () => themeSettings(colorMode).neutral.light,
        transition: 'color 800ms',
      },
    },
  },
  widgetMenuExpand: {
    zIndex: 600,
    position: 'absolute',
    top: 0,
    left: 0,
    // width: "100%",
    // width: "fit-content",
    height: 'fit-content',
    // userSelect: "none",
    display: 'flex',
    flexDirection: 'column',
    justifycontent: 'flex-start',
    // alignItems: "center",
    borderRadius: '5px',
    // backgroundColor: mode === 'dark' ? '' : ''?.backgroundColor,
    // backgroundColor:() => themeSettings(colorMode).transparent,

    // backgroundColor: 'green',
    // transition:
    //   "width: 100ms ease-in-out, padding: 100ms ease-in-out, background-color: 400ms ease-in-out",
    // backgroundColor: () => themeSettings(colorMode).transparent,
    '& >': { visibility: 'hidden' },
  },
  widgetMenuButtonArray: {
    width: '100%',

    vert: {
      width: 'fit-content',
      height: 'fit-content',
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'flex-start',
      borderRadius: '5px',
      backgroundColor: () => themeSettings(colorMode).neutral.alpha2,
      // "&:hover": {
      //   // color:  () => themeSettings(colorMode).neutral.light,
      //   // padding: "1rem 1rem 1rem 1rem",
      //   backgroundColor: () => themeSettings(colorMode).neutral.transparent,
      //   // transition:
      //   //   "width: 100ms ease-in-out, padding: 100ms ease-in-out, background-color: 400ms ease-in-out",
      // },
    },
    hor: {
      // zIndex: 1000,
      position: 'absolute',
      top: 0,
      width: '100%',
      height: '2rem',
      display: 'flex',
      flexDirection: 'row',
      padding: '0 0rem 0 2rem',
      backgroundColor: () => themeSettings(colorMode).transparent,
      // border: "1px solid white",
      // backgroundColor:  mode==="dark"?"":""?.backgroundColor,
      // backgroundColor:() => themeSettings(colorMode).neutral.light,
    },
  },
  widgetMenuButtonArrayElement: {
    width: 'fit-content',
    height: 'fit-content',
    display: 'flex',
    flexDirection: 'row',
  },
  widgetMenuButton: {
    width: '2rem',
    // height: "100%",
    height: '2rem',
    color: () => themeSettings(colorMode).neutral.light,
    backgroundColor: () => themeSettings(colorMode).transparent,
    '&:hover': {
      color: () => themeSettings(colorMode).neutral.light,
      backgroundColor: () => themeSettings(colorMode).neutral.light,
    },
    active: {
      width: '2rem',
      // height: "100%",
      height: '2rem',
      color: () => themeSettings(colorMode).neutral.dark,
      backgroundColor: () => themeSettings(colorMode).neutral.light,
      '&:hover': {
        color: () => themeSettings(colorMode).neutral.light,
        backgroundColor: () => themeSettings(colorMode).neutral.light,
      },
      '&:active': {
        color: () => themeSettings(colorMode).secondary.main,
        backgroundColor: () => themeSettings(colorMode).neutral.light,
        transition: 'color 800ms',
      },
    },
    inactive: {
      width: '2rem',
      // height: "100%",
      height: '2rem',
      color: () => themeSettings(colorMode).neutral.light,
      backgroundColor: () => themeSettings(colorMode).neutral.dark,
      '&:hover': {
        color: () => themeSettings(colorMode).neutral.dark,
        backgroundColor: () => themeSettings(colorMode).neutral.light,
      },
    },
    // width: "100%",
    // width: "2rem",
    // // height: "100%",
    // height: "2rem",
    // color:() => themeSettings(colorMode).neutral.light,
    // backgroundColor:() => themeSettings(colorMode).transparent,
    // "&:hover": {
    //   color:  () => themeSettings(colorMode).neutral.light,
    //   backgroundColor:() => themeSettings(colorMode).neutral.light,
    // },
  },
  widgetMenuButtonCustom: {
    position: 'relative',
    width: '1.3rem',
    height: '1.3rem',
    display: 'flex',
    justifyContent: 'center',
    aligntItems: 'center',
    paddingBottom: '0.7rem',
    backgroundColor: () => themeSettings(colorMode).transparent,
    img: {
      width: '1rem',
      height: '1rem',
      display: 'flex',
      justifyContent: 'center',
      aligntItems: 'center',
      backgroundColor: () => themeSettings(colorMode).transparent,
    },
  },
  widgetMenuTextField: {
    width: '100%',
    // height: "1rem",
    // height: "fit-content",
    color: '#fff',
    // backgroundColor: "#fff",
    variant: 'outlined',
    margin: 0,
    padding: 0,
    // borderRadius: "0rem 0.4rem 0.4rem 0rem",
    '& >*': {
      margin: 0,
      padding: '0 0 0 0.5rem',
      backgroundColor: '#fff',
    },
  },
  widgetMenuInline: {
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  navigator: {
    position: 'sticky',
    top: 0,
    left: 0,
    width: 'fit-content',
    height: 'fit-content',
    minWidth: '15ch',
    maxWidth: '30ch',
    display: 'flex',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  selector: {
    width: '3rem',
    height: 'inherit',
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    // borderRadius: "100%",
    backgroundColor: () => themeSettings(colorMode).transparent,
  },
  selectorItem: {
    width: 'fit-content',
    maxWidth: '8rem',
    height: 'fit-content',
    maxHeight: '15rem',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    cursor: 'grabbing',
    userSelect: 'none',
  },
  legend: {
    width: '100%',
    // maxWidth: "30ch",
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'flex-start',
    height: 'fit-content',
  },
  badge: {
    colorActive: () => themeSettings(colorMode).active,
    colorSelected: () => themeSettings(colorMode).selected,
    active: { backgroundColor: () => themeSettings(colorMode).active },
    selected: { backgroundColor: () => themeSettings(colorMode).selected },
  },
  accordion: {
    display: 'flex',
    //   width: 100%,
    height: '100%',
    flexDirection: 'column',
    gap: '1rem',
    overflow: 'scroll',
  },
  card: {
    width: '100%',
    height: '100%',
    minWidth: '14rem',
    maxWidth: '25rem',
    // maxHeight: '18rem',
    display: 'flex',
    flexFlow: 'column wrap',
    justifyContent: 'space-between',
    alignItems: 'space-around',
    padding: '0.5rem',
    border: `1px solid ${themeSettings(colorMode).neutral.main}`,
    borderRadius: '15px',
    backgroundColor: () => themeSettings(colorMode).neutral.dark,
    userSelect: 'none',
    '& .MuiCardHeader-root': { padding: 0 },
    '& .MuiTypography-body1': { padding: 0 },
    selected: {
      width: '100%',
      height: '100%',
      minWidth: '14rem',
      maxWidth: '25rem',
      // maxHeight: '18rem',
      display: 'flex',
      flexFlow: 'column wrap',
      justifyContent: 'space-between',
      alignItems: 'space-around',
      padding: '0.5rem',
      borderRadius: '15px',
      color: () => themeSettings(colorMode).neutral.light,
      backgroundColor: () => themeSettings(colorMode).selected,
      '& .MuiCardHeader-root': { padding: 0 },
      '& .MuiTypography-body1': { padding: 0 },
    },
    '&:hover': {
      border: `1px solid ${themeSettings(colorMode).action}`,
    },
  },
  cardHeader: {
    position: 'relative',
    width: '100%',
    userSelect: 'none',
    // height: paneHeight,
    // maxWidth: "fit-content",
    // maxHeight: "fit-content",
    // height: "fit-content",
    display: 'flex',
    flexDirection: 'column',
    // flexWrap: "column nowrap",
    // justifyContent: "flex-start",
    // alignItems: "flex-end",
    // padding: "2rem",
    // backgroundColor: "rgba(250,250,250,1)",
    // border: "2px solid #333433",
  },
  // borderRadius: "10px",
  avatar: {
    backgroundColor: () => themeSettings(colorMode).neutral.light,
    cursor: 'pointer',
  },
  chip: {
    // success: { color: 'success' },
    // selected: { color: 'success' },
    // // selected: () => themeSettings(colorMode).action,
    // unselected: 'default',
    size: 'small',
    variant: 'outlined',

    multilines: {
      height: 'auto',

      selected: {
        padding: '0.5rem',
        height: 'auto',
        backgroundColor: () => themeSettings(colorMode).selected,
        color: () => themeSettings(colorMode).neutral.dark,

        '& .MuiChip-label': {
          display: 'block',
          whiteSpace: 'normal',
          // color: () => themeSettings(colorMode).selected,
          color: 'white',
        },
        '&:hover': {
          // border: `1px solid green`,
          // backgroundColor: 'steelblue',
          //   // color: () => themeSettings(colorMode).neutral.dark,
          //   // color: 'steelblue',
        },
      },
      unselected: {
        padding: '0.5rem',
        height: 'auto',
        border: `1px solid ${themeSettings(colorMode).neutral.main}`,

        backgroundColor: () => themeSettings(colorMode).neutral.dark,
        '& .MuiChip-label': {
          display: 'block',
          whiteSpace: 'normal',
          // color: () => themeSettings(colorMode).unselected,
          color: 'white',
        },
        '&:hover': {
          border: `1px solid ${themeSettings(colorMode).action}`,
          //   // color: () => themeSettings(colorMode).neutral.dark,
          //   // color: 'steelblue',
        },
      },
      // "& .MuiChip-label": {
      //   display: "block",
      //   whiteSpace: "normal",
      //   color: () => themeSettings(colorMode).neutral.light,
      //   "&:hover": {
      //     color: () => themeSettings(colorMode).neutral.dark,
      //   },
      // },
    },
  },
  chipLabel: {},
  tableContainer: {
    position: 'relative',
    width: '100%',
    height: '100%',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    overflow: 'hidden',
    paddingTop: '1rem',
  },
  tableCell: {
    height: '2rem',
    backgroundColor: () => themeSettings(colorMode).transparent,
    selected: {
      backgroundColor: () => themeSettings(colorMode).neutral.main,
      '&:hover': {
        // height: "2rem",
        // backgroundColor:  mode==="dark"?"":"",
      },
    },
    '&:hover': {
      // height: "2rem",
      backgroundColor: () => themeSettings(colorMode).neutral.main,
    },
  },
  flexList: {
    width: '100%',
    height: '100%',
    display: 'flex',
    flexGrow: 2,
    flexShrink: 2,
    flexFlow: 'row wrap',
    justifyContent: 'space-around',
    alignItems: 'center',
    gap: 1,
    overflowY: 'scroll',
    // scrollSnapType: "y proximity",
    // scrollSnapType: "both mandatory",
    // scrollPadding: "0.5rem",
    // borderRadius: "10px",
    // border: "1px solid #555",
    // scrollSnapAlign: "center",
    padding: '0.5rem 2rem 0.5rem 2rem',
    minHeight: {},
    backgroundColor: () => themeSettings(colorMode).neutral.dark,
  },
  flexListElementActive: {
    zIndex: 15,
    position: 'relative',
    // maxWidth: "40ch",
    width: '100%',
    // height: "100%",
    // width: "fit-content",
    flexShrink: 2,
    flexGrow: 2,
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'flex-start',
    alignItems: 'flex-start',
    padding: '0.8rem',
    backgroundColor: () => themeSettings(colorMode).primary.dark,
    borderRadius: '5px',
    // border: "1px solid #555",
    // cursor: "grabbing",
    img: {
      // width: "100%",
      maxWidth: '20rem',
      height: 'fit-content',
      // height: "100%",
      // height: paneHeight,
      maxHeight: '10rem',
      // maxHeight: "auto",
      objectFit: 'cover',
      userSelect: 'none',
      // cursor: "pointer",
    },
  },
  flexListElementInactive: {
    zIndex: 15,
    position: 'relative',
    // maxWidth: "40ch",
    width: '100%',
    // width: "fit-content",
    flexShrink: 2,
    flexGrow: 2,
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'flex-start',
    alignItems: 'flex-start',
    padding: '0.8rem',
    // backgroundColor: "red",
    borderRadius: '5px',
    // border: "1px solid #555",
    cursor: 'pointer',
    backgroundColor: () => themeSettings(colorMode).neutral.main,
    '&:hover': { backgroundColor: () => themeSettings(colorMode).neutral.main },
    img: {
      // width: "100%",
      maxWidth: '20rem',
      height: 'fit-content',
      // height: "100%",
      // height: paneHeight,
      maxHeight: '10rem',
      // maxHeight: "auto",
      objectFit: 'cover',
      userSelect: 'none',
      // cursor: "pointer",
    },
  },
  list: {
    width: '100%',
    height: '100%', // Use auto or omit the height property for flexible height
    // display: "flex",
    // flexDirection: "column",
    // justifyContent: "flex-start",
    // alignItems: "flex-start",
    overflowY: 'auto',
    overflowX: 'hidden',
    bgcolor: 'background.paper', // "&::-webkit-scrollbar": {
    //   position: "absolute",
    //   left: 0,
    // },
    // "&::-webkit-scrollbar-track": {
    // backgroundColor: "pink",
    // },
  },
  resizeBars: {
    horizontal: {
      zIndex: 100,
      position: 'absolute',
      display: 'flex',
      // flexDirection: "column",
      justifyContent: 'center',
      aligntItems: 'center',
      // width: "fit-content",
      // width: "0.6rem",
      width: '1rem',
      // minWidth: "0.8rem",
      height: '100%',
      // minHeight: "0.8rem",
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%)',
      cursor: 'ew-resize',
      // borderLeft: "5px solid #111211",
      // borderRight: "5px solid #111211",
      // backgroundColor: "red",
      // backgroundColor:() => themeSettings(colorMode).transparent,
      // backgroundColor: "steelblue",
      '&:hover': {
        transition: 'background-color 800ms',
        opacity: 0.7,
        backgroundColor: () => themeSettings(colorMode).primary.main,
      },
    },
    vertical: {
      zIndex: 100,
      position: 'absolute',
      display: 'flex',
      // flexDirection: direction,
      justifyContent: 'center',
      aligntItems: 'center',
      width: '100%',
      // minWidth: "0.8rem",
      // height: "fit-content",
      // height: "0.6rem",
      height: '1rem',
      // minHeight: "0.8rem",
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%)',
      cursor: 'ns-resize',
      // borderTop: "5px solid #111211",
      // borderBottom: "5px solid #111211",
      // backgroundColor: "red",
      backgroundColor: () => themeSettings(colorMode).transparent,
      '&:hover': {
        transition: 'background-color 800ms',
        opacity: 0.7,
        backgroundColor: () => themeSettings(colorMode).primary.dark,
      },
    },
    handles: {
      row: {
        // zIndex: 200,
        // position: "absolute",
        width: '1rem',
        // width: "100%",
        height: '1rem',
        // height: "100%",
        rotate: '90deg',
        color: '#777877',
        scale: '1.4',
      },
      column: {
        // zIndex: 200,
        // position: "absolute",
        width: '1rem',
        // width: "100%",
        height: '1rem',
        // height: "100%",
        color: '#777877',
        scale: '1.4',
      },
    },
  },
  resizeHandlesNESW: {
    // position: "absolute",
    // top: 0,
    // left: 0,    scale: 10,
    // scale: 1,
    position: 'absolute',
    zIndex: 0,
    width: '1.3rem',
    height: '1.3rem',
    // backgroundColor:() => themeSettings(colorMode).transparent,
    borderRadius: '50%',
    border: `1px ${themeSettings(colorMode).alpha1} dashed`,
    transition: 'background-color 800ms, borderRadius 2000ms, border 400ms',
    '&:hover': {
      // width: "2rem",
      // height: "2rem",
      zIndex: 200,
      position: 'absolute',
      scale: 1.8,
      // backgroundColor: themeSettings(colorMode).alpha1,
      border: `1px ${themeSettings(colorMode).white} dashed`,
      borderRadius: '50%',
      backgroundColor: themeSettings(colorMode).action,
      opacity: 0.4,
      transition: 'background-color 400ms, borderRadius 2000ms, border 400ms',
    },
    '&:active': {
      // width: "2rem",
      // height: "2rem",
      scale: 1.3,
      backgroundColor: '#444',
      border: `1px ${() => themeSettings(colorMode).neutral.light} solid`,
      borderRadius: '0%',
      backgroundColor: themeSettings(colorMode).success,
      transition: 'background-color 400ms, borderRadius 2000ms, border 400ms',
    },
    '& .react-resizable-handle': {
      // width: "2rem",
      // height: "2rem",
      zIndex: 0,
      scale: 1.3,
      // backgroundColor: 'red',
      transition: 'background-color 400ms, borderRadius 2000ms, border 400ms',
    },
  },
  article: {
    // position: "relative",
    width: '100%',
    // maxWidth: "60ch",
    height: '100%',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'flex-start',
    alignItems: 'center',
    padding: '1rem',
    overflow: 'auto',
    backgroundColor: () => themeSettings(colorMode).neutral.dark,
    // padding: `${widgetMenuHeight} 0`,
    // backgroundColor: "#444",
  },
  title: {
    variant: 'h2',
    width: '100%',
    textAlign: 'left',
    verticalAlign: 'center',
    color: () => themeSettings(colorMode).neutral.light,
    paddingBottom: '1.5rem',
  },
  subTitle: {
    variant: 'h4',
    width: '100%',
    textAlign: 'left',
    verticalAlign: 'center',
    // fontSize: "0.8rem",
    color: () => themeSettings(colorMode).neutral.light,
  },
  widgetTitle: {
    variant: 'h6',
    width: '100%',
    textAlign: 'left',
    verticalAlign: 'center',
    color: 'white',
    // fontWeight: 900,
    paddingBottom: '1.5rem',
  },
  widgetSubTitle: {
    variant: 'body1',
    width: '100%',
    textAlign: 'left',
    verticalAlign: 'center',
    color: 'white',
    // fontWeight: 900,
    paddingBottom: '1.5rem',
  },
  floor: {
    width: '100%',
    // height: "100%",    variant: "body1",
  },
  strongText: { 'background-color': 'red' },
  textBody: {
    width: '100%',
    height: '100%',
    maxWidth: '100ch',
    variant: 'body1',
    // userSelect: "none",
    textAlign: 'justify',
    overflow: 'scroll',
    // padding: '0 1.5rem',
    noLineBreak: { whiteSpace: 'nowrap', padding: '0.2rem' },
    alignStart: { textAlign: 'start' },
    // color: () => themeSettings(colorMode).neutral.light,
    contrast: {
      color: 'white',
    },
    selected: {
      width: '100%',
      height: '100%',
      maxWidth: '100ch',
      variant: 'body1',
      // userSelect: "none",
      textAlign: 'justify',
      overflow: 'scroll',
      // padding: '0 1.5rem',
      noLineBreak: { whiteSpace: 'nowrap', padding: '0.2rem' },
      alignStart: { textAlign: 'start' },
      color: () => themeSettings(colorMode).white,
    },
  },
  textBodyFitText: {
    width: '100%',
    height: 'fit-content',
    flexWrap: 'nowrap',
    variant: 'body1',
    color: () => themeSettings(colorMode).neutral.light,
  },
  truncate: {
    width: '12ch',
    height: '20px',
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    fontSize: '0.75rem',
    // flippedColors:{

    //   color: () => themeSettings(colorMode).neutral.dark, // padding: "0 0.8rem 0 0.8rem",
    // },
    color: () => themeSettings(colorMode).neutral.light, // padding: "0 0.8rem 0 0.8rem",
  },
  customTextArea: {
    boxSizing: 'border-box',
    width: '100%',
    height: '100%',
    // fontFamily: 'IBM Plex Sans', sans-serif,
    // fontSize: "0.875rem",
    // fontWeight: "400",
    // lineHeight: "1.5",
    // padding: "8px 12px",
    // borderRadius: "3rem",
    overflow: 'auto',
    // textOverflow: "ellipsis",
    // color: ${isDarkMode ? grey[300] : grey[900]},
    // background: ${isDarkMode ? grey[900] : '#fff'},
    // border: "1px solid pink", // ${isDarkMode ? grey[700] : grey[200]},
    // boxShadow: 0px 2px 2px //${isDarkMode ? grey[900] : grey[50]},
    color: () => themeSettings(colorMode).neutral.dark, //${cyan[400]};
    backgroundColor: () => themeSettings(colorMode).paper, //${cyan[400]};
    '&:hover': {
      borderColor: () => themeSettings(colorMode).neutral.light, //${cyan[400]};
    },
    '&:focus': {
      outline: 0,
      borderColor: () => themeSettings(colorMode).neutral.light, //${cyan[400]};
      // box-shadow: 0 0 0 3px ${isDarkMode ? cyan[500] : cyan[200]};
    },
    '&:focus-visible': {
      outline: 0,
    },
  },
  // firefox
  textField: {
    minWidth: '12ch',
    width: '100%',
    // maxWidth: "40ch",
    // height: "100%",
    // height: "1rem",
    size: 'small',
    // fontSize: "0.2rem",
    variant: 'outlined', //outlined, filled, and standard
    color: () => themeSettings(colorMode).neutral.dark, //${cyan[400]};
    backgroundColor: () => themeSettings(colorMode).paper, //${cyan[400]}; "&:focus": { position: "absolute", width: "100%" },
    '& .MuiInputBase-input': {
      display: 'flex',
      alignItems: 'center',
      fontSize: '0.8rem',
      // margin: 0,
      // padding: "0px",
      // lineHeight: "1rem",
      color: 'black',
      backgroundColor: 'white',
      borderRadius: '5px',
    },
    '& .MuiFormLabel-root': {
      display: 'flex',
      alignItems: 'center',
      fontSize: '0.8rem',
      // margin: 0,
      padding: '0px 0px 0px 0px',
      // lineHeight: "1rem",
      color: '#333433280',
      // backgroundColor: "#33343320",
    },
    // ".MuiInputBase-input": { width: "8ch", height: "1rem" },
    // ".MuiInputBase-input:focus": { width: "20ch", height: "2rem" },
    // backgroundColor: "red",
  },
  textFieldLarge: {
    minWidth: '12ch',
    width: '100%',
    // maxWidth: "40ch",
    // height: "100%",
    // height: "1rem",
    size: 'small',
    // fontSize: "0.2rem",
    variant: 'outlined', //outlined, filled, and standard
    color: 'white',
    backgroundColor: () => themeSettings(colorMode).neutral.alpha1,
    display: 'flex',
    flexGrow: 2,
    flexShrink: 2,
    '&:focus': {
      width: '100%',
      maxWidth: '100%',
      height: '100%',
      maxHeight: '100%',
      color: 'white',
    },
    '.MuiInputBase-input': {
      width: '100%',
      height: '1rem',
      color: 'white',
    },
    '.MuiInputBase-input:focus': {
      width: '100%',
      maxWidth: '100%',
      height: '100%',
      maxHeight: '100%',
      color: 'white',
    },
    // backgroundColor: "red",
  },
  iconButton: {
    width: '2rem',
    height: '2rem',
    // fontSize: "2rem",
    color: () => themeSettings(colorMode).neutral.main,
    // backgroundColor: "red",
    '&:hover': { color: () => themeSettings(colorMode).white },
    active: {
      width: '2rem',
      height: '2rem',
      color: () => themeSettings(colorMode).active,
      '&:hover': { color: () => themeSettings(colorMode).white },
    },
    inactive: {
      width: '2rem',
      height: '2rem',
      color: () => themeSettings(colorMode).inactive,
      '&:hover': { color: () => themeSettings(colorMode).white },
    },
    action: {
      // position: "absolute",
      // inset: "0 0 0 0",
      width: '2rem',
      height: '2rem',
      color: () => themeSettings(colorMode).action,
      '&:hover': { color: () => themeSettings(colorMode).white },
    },
    selected: {
      // position: "absolute",
      // inset: "0 0 0 0",
      width: '2rem',
      height: '2rem',
      color: () => themeSettings(colorMode).selected,
      '&:hover': { color: () => themeSettings(colorMode).white },
    },
    unselected: {
      // position: "absolute",
      // inset: "0 0 0 0",
      width: '2rem',
      height: '2rem',
      color: () => themeSettings(colorMode).unselected,
      '&:hover': { color: () => themeSettings(colorMode).white },
    },
    dev: {
      // position: "absolute",
      // inset: "0 0 0 0",
      width: '2rem',
      height: '2rem',
      color: () => themeSettings(colorMode).dev,
      '&:hover': { color: () => themeSettings(colorMode).white },
    },
    warning: {
      width: '2rem',
      height: '2rem',
      color: () => themeSettings(colorMode).warning,
      '&:hover': { color: () => themeSettings(colorMode).white },
    },
    alert: {
      width: '2rem',
      height: '2rem',
      color: () => themeSettings(colorMode).alert,
      '&:hover': { color: () => themeSettings(colorMode).neutral.dark },
    },
    error: {
      width: '2rem',
      height: '2rem',
      color: () => themeSettings(colorMode).error,
      '&:hover': { color: () => themeSettings(colorMode).neutral.dark },
    },
  },
  button: {
    width: '100%',
    color: () => themeSettings(colorMode).neutral.light,
    variant: 'contained',
  },
  buttonMenu: {
    // active: {
    //   width: "100%",
    //   // width: "fit-content",
    //   // width: "3rem",
    //   height: "100%",
    //   // height: "fit-content",
    //   // height: "3rem",
    //   display: "flex",
    //   // justifyContent: "center",
    //   // alignItems: "center",
    //   // backgroundColor: "red",
    //   fontSize: "1rem",
    //   // paddingBottom: "0.05rem",
    // },
    active: {
      width: '3rem',
      height: 'inherit',
      display: 'flex',
      // justifyContent: "center",
      // alignItems: "center",
      color: () => themeSettings(colorMode).neutral.light,
      fontSize: '0.7rem',
      backgroundColor: () => themeSettings(colorMode).neutral.main,
      // paddingBottom: "0.05em",
    },
    inactive: {
      width: '3rem',
      height: 'inherit',
      display: 'flex',
      // justifyContent: "center",
      // alignItems: "center",
      color: () => themeSettings(colorMode).neutral.light,
      fontSize: '0.7rem',
      backgroundColor: () => themeSettings(colorMode).neutral.main,
      // paddingBottom: "0.05em",
    },
  },
  buttonMenuInactive: {
    width: '2rem',
    height: '2rem',
    display: 'flex',
    // justifyContent: "center",
    // alignItems: "center",
    color: () => themeSettings(colorMode).neutral.light,
    fontSize: '1rem',
    // paddingBottom: "0.05em",
  },
  slider: {
    width: '100%',
    size: 'small',
    backgroundColor: () => themeSettings(colorMode).neutral.alpha2,
    '&:hover': { color: () => themeSettings(colorMode).neutral.light },

    '& .MuiSlider-rail': {
      color: () => themeSettings(colorMode).white,
    },
    '& .MuiSlider-track': {
      color: () => themeSettings(colorMode).white,
    },
    '& .MuiSlider-thumb': {
      color: () => themeSettings(colorMode).action,
    },
    '& .MuiSlider-mark': {
      backgroundColor: () => themeSettings(colorMode).white, // Change the color
      width: '2px', // Adjust the width
      height: '10px', // Adjust the height
      borderRadius: '1px', // Add rounded corners
    },
    '& .MuiSlider-markLabel': {
      // Style the mark labels
      color: 'white',
      fontSize: '12px',
    },
    '& .MuiSlider-valueLabel': {
      // transform: 'translate(0, 0px)' /* Adjust these values */,
    },

    // '& .MuiSlider-valueLabel >*': {
    //   zIndex: 1000,
    //   position: 'absolute',
    //   backgroundColor: '#007bff' /* Example: change background color */,
    //   color: 'white',
    //   fontSize: '14px',
    // },
  },
  section: {
    backgroundColor: () => themeSettings(colorMode).paper,
    padding: '0.2rem',
  },
  fieldComponent: {
    // width: "fit-content",
    width: '100%',
    // maxWidth: "100%",
    // height: "100%",
    // height: "3rem",
    backgroundColor: () => themeSettings(colorMode).transparent, // or any other style you want
    display: 'flex',
    // flexDirection: "row",
    flexFlow: 'column wrap',
    flexGrow: 2,
    flexShrink: 2,
    // padding: "0.2rem",
    // gap: 1,
    '& .MuiButtonBase-root': {
      // Target the root button element of the Checkbox
      // ...styled?.iconButton?.action,
      // width: "2rem",
      // height: "2rem",
      // backgroundColor: styled?.iconButton?.action, // or any other style you want
    },
    '& .MuiSvgIcon-root': {
      // color: "green",
      width: '2rem',
      height: '2rem',
      // backgroundColor: styled?.iconButton?.action, // or any other style you want
      // backgroundColor: "pink",
    },
    '& .MuiBox-root': {
      // width: "fit-content",
    },
    '& .MuiTypography-root': {
      padding: '0 0.6rem',
      // width: "fit-content",
    },
  },
  checkBoxWithLabel: {
    width: '100%',
    height: '100%',
    display: 'flex',
    flexFlow: 'row nowrap',
    // flex: " 1 0 auto",
    // flexGrow: 0,
    alignItems: 'center',
    // padding: "0.2rem 0.2rem",
  },
  checkBox: {
    // width: "2rem",
    // height: "2rem",
    // color: () => themeSettings(colorMode).neutral.light,
    // backgroundColor: "red",
    padding: 0,
    margin: 0,
    checked: {
      // color: () => themeSettings(colorMode).neutral.light,
      color: 'green',

      margin: 0,
      padding: 0,
      // backgroundColor: "green",
    },
    unchecked: {
      // color: () => themeSettings(colorMode).neutral.dark,
      color: 'red',
      padding: 0,
      margin: 0,
      // backgroundColor: "red",
    },
    variant: '',
    size: 'small',
    '&.Mui-checked': {
      // Target the checked state
      '& .MuiSvgIcon-root': {
        // Target the check icon specifically
        color: 'yellow', // or any other color for the checked icon
      },
    },
  },
  devActive: {
    position: 'relative',
    display: 'flex',
    flexDirection: 'column',
    width: '100%',
    // height: mainHeight,
    border: `5px solid ${() => themeSettings(colorMode).pink}`,
  },
  devInactive: {
    position: 'relative',
    display: 'flex',
    flexDirection: 'column',
    width: '100%',
    // height: mainHeight,
  },
  imageAbsoluteFullSpace: {
    zIndex: 1,
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    objectFit: 'contain',
    // backgroundColor: colors.blueAccent[700],
    // color: colors.grey[100],
    filter: 'blur(5px)',
    display: 'block',
    marginLeft: 'auto',
    marginRight: 'auto',
  },
  image: {
    position: 'sticky',
    // width: articleInFocus?.width,
    width: '100%',
    // height: articleInFocus?.height,
    height: '100%',
    maxHeight: '20vh',
    objectFit: 'contain',
    padding: '0 5% 0 5%',
  },
  //** D3 */
  //** Fomts for d3.js .attr() & .style() */
  font: {
    fontFamily: 'Source Sans Pro,sans-serif',
    fontWeight: 100,
    fontSize: '0.8rem',
    color: '#ccc',
    letterSpacing: '1px',
  },
  playerControls: {
    zIndex: 100,
    // position: "absolute",
    // bottom: 0,
    // left: 0,
    // right: 0,
    width: '100%',
    height: '2rem',
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'center',
    borderRadius: '5px',
    backgroundColor: () => themeSettings(colorMode).neutral.dark,
  },
  googleMap: {},
  mapPin: {
    // glyphColor: "#000",
    // borderColor: "#000",
    active: {
      background: () => themeSettings(colorMode).active,

      glyphColor: 'white',
      borderColor: () => themeSettings(colorMode).pink,
    },
    selected: {
      background: () => themeSettings(colorMode).selected,

      glyphColor: () => themeSettings(colorMode).pink,
      borderColor: 'white',
    },
    inactive: {
      background: () => themeSettings(colorMode).neutral.light,
      glyphColor: '#000',

      borderColor: () => themeSettings(colorMode).neutral.dark,
    },
  },
  histogram: {
    xDomain: {
      fill: 'none',
      stroke: 'none',
      strokeWidth: '0px',
      textAnchor: 'end',
    },
    yDomain: {
      fill: 'none',
      stroke: 'none',
      strokeWidth: 0,
      textAnchor: 'end',
    },
    margin: { top: 0, right: 20, bottom: 45, left: 20 },
    ticks: {
      heightY1: '10px',
      heightY2: '10px',
      stroke: 'rgba(10,10,20,1)', //TODO: check if rgb else "() => themeSettings(colorMode).neutral.dark"
      strokeWidth: 1,
      zIndex: 100,
      position: 'relative',
    },
  },
});
// context for color mode
export const ColorModeContext = createContext({
  toggleColorMode: () => {},
});

export const useMode = () => {
  const [mode, setMode] = useState('dark');

  const colorMode = useMemo(
    () => ({
      toggleColorMode: () =>
        setMode((prev) => (prev === 'light' ? 'dark' : 'light')),
      mode: mode,
    }),
    [mode]
  );
  useEffect(() => {
    // console.log(
    //   'colorMode',
    //   colorMode?.mode,
    //   createTheme(themeSettings(colorMode))
    // );
    createTheme(themeSettings(colorMode));
    return () => {};
  }, [colorMode]);
  const { palette } = themeSettings(colorMode);
  // console.log('colorMode', colorMode.mode);
  const theme = useMemo(
    () => createTheme(themeSettings(colorMode)),
    [colorMode]
  );
  return [theme, colorMode, palette, styled(colorMode)];
};
